# Generated by Django 5.2.4 on 2025-07-22 10:00

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('enrollment', '0008_alter_applicant_study_form'),
    ]

    operations = [
        migrations.AddField(
            model_name='applicant',
            name='application_date',
            field=models.DateField(default=django.utils.timezone.now, verbose_name='Дата подачи заявления'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='is_ready_for_enrollment',
            field=models.BooleanField(default=False, verbose_name='К зачислению'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='photo',
            field=models.ImageField(blank=True, null=True, upload_to='applicant_photos/', verbose_name='Фото 3x4'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('iin', models.CharField(max_length=12, unique=True, verbose_name='ИИН')),
                ('study_form', models.CharField(blank=True, choices=[('Очная', 'Очная'), ('Дуальная', 'Дуальная')], max_length=50, null=True, verbose_name='Форма обучения')),
                ('base_education', models.CharField(blank=True, choices=[('9 классов', '9 классов'), ('11 классов', '11 классов'), ('ТиПО', 'ТиПО')], max_length=50, null=True, verbose_name='На базе')),
                ('school', models.CharField(blank=True, max_length=255, null=True, verbose_name='Школа/Колледж')),
                ('graduation_year', models.IntegerField(blank=True, null=True, verbose_name='Год окончания')),
                ('with_honors', models.BooleanField(default=False, verbose_name='С отличием')),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Средний балл аттестата')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('study_language', models.CharField(blank=True, max_length=50, null=True, verbose_name='Язык обучения')),
                ('social_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Социальный статус')),
                ('citizenship', models.CharField(blank=True, default='Республика Казахстан', max_length=100, null=True, verbose_name='Гражданство')),
                ('nationality', models.CharField(blank=True, max_length=100, null=True, verbose_name='Национальность')),
                ('gender', models.CharField(blank=True, choices=[('Мужской', 'Мужской'), ('Женский', 'Женский')], max_length=10, null=True, verbose_name='Пол')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Контакты')),
                ('home_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Дом. адрес')),
                ('parents_info', models.TextField(blank=True, null=True, verbose_name='ФИО родителей')),
                ('has_incomplete_docs', models.BooleanField(default=False, verbose_name='Неполный пакет документов')),
                ('needs_dormitory', models.BooleanField(default=False, verbose_name='Общежитие')),
                ('payment_type', models.CharField(blank=True, choices=[('Госзаказ', 'Госзаказ'), ('Платное', 'Платное')], default='Платное', max_length=20, null=True, verbose_name='Тип финансирования')),
                ('application_date', models.DateField(verbose_name='Дата подачи заявления')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='student_photos/', verbose_name='Фото 3x4')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movement_history', models.ManyToManyField(blank=True, to='enrollment.order', verbose_name='История приказов')),
                ('qualification', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='enrollment.qualification', verbose_name='Квалификация')),
                ('specialty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='enrollment.specialty', verbose_name='Специальность')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
                'ordering': ['full_name'],
            },
        ),
    ]
